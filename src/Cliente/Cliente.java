package Cliente;


import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.*;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego Trujillo
 */
public class Cliente extends javax.swing.JFrame implements Runnable {

    String hora, minutos, segundos;
    Thread hilo;

    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();
        lbFecha.setText(fecha());
        hilo = new Thread(this);
        hilo.start();
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_mensaje = new javax.swing.JTextField();
        btn_enviar = new javax.swing.JButton();
        txtSaldo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDeposito = new javax.swing.JTextField();
        btnDepositar = new javax.swing.JButton();
        btnRetiro = new javax.swing.JButton();
        lbFecha = new javax.swing.JLabel();
        lbhora = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTrans = new javax.swing.JTable();
        btnArray = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArray = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_enviar.setText("Consultar Saldo");
        btn_enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enviarActionPerformed(evt);
            }
        });

        jLabel2.setText("Numero de cuenta");

        jLabel3.setText("Saldo Actual");

        jLabel4.setText("Transaccion");

        btnDepositar.setText("Depositar");
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });

        btnRetiro.setText("Retiro");
        btnRetiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetiroActionPerformed(evt);
            }
        });

        lbFecha.setText("DD/MM/YY");

        lbhora.setText("00:00:00");

        tblTrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cuenta", "Nombre", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTrans);

        btnArray.setText("Cargar Array");
        btnArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArrayActionPerformed(evt);
            }
        });

        txtArray.setColumns(20);
        txtArray.setRows(5);
        jScrollPane2.setViewportView(txtArray);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_enviar)
                        .addGap(32, 32, 32)
                        .addComponent(btnDepositar)
                        .addGap(18, 18, 18)
                        .addComponent(btnRetiro)
                        .addGap(51, 51, 51)
                        .addComponent(btnArray))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_mensaje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSaldo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDeposito, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lbFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lbhora))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(212, 212, 212))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbFecha)
                            .addComponent(lbhora))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_enviar)
                        .addComponent(btnDepositar)
                        .addComponent(btnRetiro)
                        .addComponent(btnArray))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enviarActionPerformed
        try {
            Socket socket = new Socket("127.0.0.1", 5050);
            DataOutputStream enviar_datos = new DataOutputStream(socket.getOutputStream());
            enviar_datos.writeUTF("select * from Clientes where cuenta = " + txt_mensaje.getText());
            DataInputStream recibir_datos = new DataInputStream(socket.getInputStream());
            String mensaje = recibir_datos.readUTF();

            // campo.append("\n" + mensaje);
            txtSaldo.setText(mensaje);

        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_enviarActionPerformed

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed
        try {
            Socket socket = new Socket("127.0.0.1", 5050);
            DataOutputStream enviar_datos = new DataOutputStream(socket.getOutputStream());
            enviar_datos.writeUTF("update Clientes set Saldo = Saldo + " + txtDeposito.getText() + " where Cuenta = " + txt_mensaje.getText());
            DataInputStream recibir_datos = new DataInputStream(socket.getInputStream());
            String mensaje = recibir_datos.readUTF();

            // campo.append("\n" + mensaje);
            // txtSaldo.setText(mensaje);
            consultarSaldo();

        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnDepositarActionPerformed

    private void btnRetiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetiroActionPerformed
        try {
            Socket socket = new Socket("127.0.0.1", 5050);
            DataOutputStream enviar_datos = new DataOutputStream(socket.getOutputStream());
            enviar_datos.writeUTF("update Clientes set Saldo = Saldo - " + txtDeposito.getText() + " where Cuenta = " + txt_mensaje.getText());
            DataInputStream recibir_datos = new DataInputStream(socket.getInputStream());
            String mensaje = recibir_datos.readUTF();

            // campo.append("\n" + mensaje);
            // txtSaldo.setText(mensaje);
            consultarSaldo();

        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnRetiroActionPerformed

    private void btnArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArrayActionPerformed


////
////        try {
////            Socket socket = new Socket("127.0.0.1", 5050);
////            DataOutputStream enviar_datos = new DataOutputStream(socket.getOutputStream());
////            //   String txt_mensage = null;
////           // enviar_datos.writeUTF("select * from Clientes where cuenta = " + txt_mensaje.getText());
////            enviar_datos.writeUTF("select * from Clientes ");
////            DataInputStream recibir_datos = new DataInputStream(socket.getInputStream());
////
////            String mensaje = recibir_datos.readUTF();
////            System.out.println(mensaje);
////            txtArray.append(mensaje.replace("[","").replace("]","\n"));
////
////            String Cadena = mensaje.replace("[","").replace("]","");
////            System.out.println("Esta es la cadena: "+ Cadena);
////            String separador = ", ";
////            
////            String[] arreglo = Cadena.split(separador);
////            DefaultTableModel model = new DefaultTableModel();
////           // for (String lenguaje : arreglo) {
////             //   System.out.println(lenguaje);
////
////                
////                model.addColumn("Cuenta");
////                model.addColumn("Nombre del Cliente");
////                model.addColumn("Saldo Actual");
////                model.addRow(new Object[]{arreglo[0],arreglo[1],arreglo[2]});
////                
////               
////                
////         //   }
////            tblTrans.setModel(model);
////
////            //para seleccionar solo un valor de la cadena
////         //   string char1;
////            // char1 = cadena.charAt(3);
////            // System.out.println(char1);
////            //fin selecciona valor de la cadena
////        } catch (IOException e) {
////            System.out.println(e);
////        }

    }//GEN-LAST:event_btnArrayActionPerformed

   

                                            

    
    

    public void consultarSaldo() {
        try {
            Socket socket = new Socket("127.0.0.1", 5050);
            DataOutputStream enviar_datos = new DataOutputStream(socket.getOutputStream());
            enviar_datos.writeUTF("select * from Clientes where cuenta = " + txt_mensaje.getText());
            DataInputStream recibir_datos = new DataInputStream(socket.getInputStream());
            String mensaje = recibir_datos.readUTF();

            // campo.append("\n" + mensaje);
            txtSaldo.setText(mensaje);

        } catch (IOException e) {
            System.out.println(e);
        }

    }

    public static String fecha() {

        Date fecha = new Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");

        return formatofecha.format(fecha);

    }

    public void hora() {
        Calendar calendario = new GregorianCalendar();
        Date horaactual = new Date();
        calendario.setTime(horaactual);
        hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArray;
    private javax.swing.JButton btnDepositar;
    private javax.swing.JButton btnRetiro;
    private javax.swing.JButton btn_enviar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbFecha;
    private javax.swing.JLabel lbhora;
    private javax.swing.JTable tblTrans;
    private javax.swing.JTextArea txtArray;
    private javax.swing.JTextField txtDeposito;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txt_mensaje;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        Thread current = Thread.currentThread();
        while (current == hilo) {

            hora();
            lbhora.setText(hora + ":" + minutos + ":" + segundos);
        }

        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

    }

}
